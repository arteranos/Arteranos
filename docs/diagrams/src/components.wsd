
@startuml components
    skin rose

    [Viewer\n(Client)] as V

    component "Cloud Storage" {
        [World\nRepository] as WR
        port "HTTP(s)" as WR_HTTP
        WR <-- WR_HTTP
    }
    
    component "World Server" {
        database {
            [User\ndatabase] as DB
        }
        [World Server\nCore] as WS

        WS --> DB
        port UDP as WS_UDP
        port "HTTP(s)" as WS_HTTP
        WS <-up- WS_UDP
        WS <-right- WS_HTTP
    }

    V --> WR_HTTP
    V --> WS_UDP
    V --> WS_HTTP
@enduml

@startuml Movement_Pose_Seq
    skin rose
    participant User as "User input\ndevice"
    participant c1 as "User's\nClient"
    participant c2 as "Other's\nClients"
    participant Server as "World\nServer"

    User ->> c1 ++ : movement
    note left of c1 #ff8888 : Need low \nlatency !

    c1 -> c1 ++ : movement
    note left of c1 : precompute IK\nfor complete pose
    return  complete\npose
    c1 ->> Server ++ : Avatar pose\nchange
    deactivate c1

    note left of Server : Announce user's\nmovement
    Server ->> c2 ++ : Pose propagation
    deactivate Server

    c2 -> c2 : Update
@enduml

@startuml user_database

    enum blocked_reason {
        unspecified
        harassment
        illegal_content
        griefing
        other
    }

    enum acct_status {
        active
        banned
    }

    object users {
        -guid id <b>key</b>
        -string username
        -string password
        -acct_status status
        +string nickname
        +string avatarURL
        -blob preferences
    }

    object friends {
        -guid id <b>key</b>
        #guid other_id
        #timestamp last_seen
    }

    object blocking {
        -guid id <b>key</b>
        #guid blocking_id
        #blocked_reason reason
        #string reason2
    }

    users::id "1" --> "n" friends::other_id 
    users::id "1" --> "n" blocking::other_id 

    note "Associations must\nbe symmetrical" as N1
    N1 .. friends

@enduml

	

@startsalt example
{
  Just plain text
  [This is my button]
  ()  Unchecked radio
  (X) Checked radio
  []  Unchecked box
  [X] Checked box
  "Enter text here   "
  ^This is a droplist^
}
@endsalt

@startuml
listopeniconic
@enduml

@startuml login
!unquoted procedure SALT($x)
"{{
salt
%invoke_procedure("_"+$x)
}}" as $x
!endprocedure

!procedure _login()
{^  
    {
        <&hard-drive> World | "localhost"
        <&person> Login     | "Name     "
        <&key> Password     | "****     "
    }
    ---
    [Login with Discord]
    [Login with GitHub ]
    ---
    [Login as guest    ]

    [X] Invisible
}
!endprocedure

!procedure _createworld()
{^
    {
        <b>Start a new server</b>
        World to load
        "<&hard-drive> World Repo URL  "
        [Advanced configuration]
    }

    | [Create Server]
}
!endprocedure

!procedure _joinworld()
{^
    {
        <b>Server list</b>
        {SI
        Iwontsay's Cabin (idle)
        Unnamed World 2 (Campfire)
        Lorelle's World (Arteranos 101)
        .
        .
        .
        "                        "
        }
        [ ] Idle Only
        [ ] Requires Password
    }
    [Join Server] 
}
!endprocedure

!procedure _advanced()
{^
    {
        [ ] Unlisted
        [X] Password protected
        "<&key> Password        "
        ---
        [X] Only registered users
        "Max users          "
    }
}
!endprocedure

!procedure _choosemode()
{
    [Join World  ]
    [Create World]
}
!endprocedure


(*) --> SALT(login)
note top
Allow saved
login
end note

login --right--> SALT(choosemode)

choosemode --right--> [join world] SALT(joinworld)
note top
  Can omitted with saved settings (mobile) or
  commandline arguments (PC)

  Use 'landing world' if the server is idle or
  world URL is omitted
end note

choosemode --down--> [create world] SALT(createworld)

createworld --left--> [advanced] SALT(advanced)
advanced --right--> createworld

joinworld --> (*)
createworld --> (*)
@enduml

start